# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-02-07 13:11
from __future__ import unicode_literals

import data.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('aplus_client', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity', models.FloatField(default=0.0)),
                ('matches_json', models.TextField(blank=True, default=None, null=True)),
                ('review', models.IntegerField(choices=[(-10, 'False alert'), (0, 'Unspecified match'), (5, 'Suspicious match'), (10, 'Plagiate'), (1, 'Approved plagiate')], default=0)),
            ],
            options={
                'ordering': ['-similarity'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.IntegerField()),
                ('url', models.URLField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('key', data.models.URLKeyField(help_text='Unique alphanumeric course instance id', max_length=64, unique=True)),
                ('name', models.CharField(help_text='Descriptive course name', max_length=128)),
                ('provider', models.CharField(choices=[('a+', 'A+'), ('filesystem', 'File system')], default='a+', help_text='Provider for submission data', max_length=16)),
                ('tokenizer', models.CharField(choices=[('skip', 'Skip'), ('scala', 'Scala'), ('python', 'Python')], default='skip', help_text='Tokenizer for the submission contents', max_length=16)),
                ('minimum_match_tokens', models.IntegerField(default=15, help_text='Minimum number of tokens to consider a match')),
                ('archived', models.BooleanField(db_index=True, default=False)),
                ('namespace', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aplus_client.ApiNamespace')),
                ('reviewers', models.ManyToManyField(blank=True, help_text='Reviewers for match analysis', related_name='courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('key', data.models.URLKeyField(help_text='Alphanumeric exercise id', max_length=64)),
                ('name', models.CharField(default='unknown', help_text='Descriptive exercise name', max_length=128)),
                ('override_tokenizer', models.CharField(blank=True, choices=[('skip', 'Skip'), ('scala', 'Scala'), ('python', 'Python')], max_length=8, null=True)),
                ('override_minimum_match_tokens', models.IntegerField(blank=True, null=True)),
                ('template_tokens', models.TextField(blank=True, default='')),
                ('paused', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='data.Course')),
            ],
            options={
                'ordering': ['course', 'name', 'created'],
            },
        ),
        migrations.CreateModel(
            name='ProviderQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('data', models.CharField(max_length=128)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('key', data.models.URLKeyField(help_text='Alphanumeric student id', max_length=64)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='data.Course')),
            ],
            options={
                'ordering': ['course', 'key'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('provider_url', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('grade', models.FloatField(default=0.0)),
                ('tokens', models.TextField(blank=True, default=None, null=True)),
                ('indexes_json', models.TextField(blank=True, default=None, null=True)),
                ('authored_token_count', models.IntegerField(blank=True, default=None, null=True)),
                ('longest_authored_tile', models.IntegerField(blank=True, default=None, null=True)),
                ('max_similarity', models.FloatField(blank=True, db_index=True, default=None, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='data.Exercise')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='data.Student')),
            ],
        ),
        migrations.AddField(
            model_name='comparison',
            name='submission_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Submission'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='submission_b',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Submission'),
        ),
        migrations.AlterUniqueTogether(
            name='student',
            unique_together=set([('course', 'key')]),
        ),
        migrations.AlterUniqueTogether(
            name='exercise',
            unique_together=set([('course', 'key')]),
        ),
        migrations.AlterUniqueTogether(
            name='comparison',
            unique_together=set([('submission_a', 'submission_b')]),
        ),
    ]
